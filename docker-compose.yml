version: "3.9"
services:
  app:
    image: online-bookstore:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db-primary
      - postgres-db-replica
      - redis
    environment:
      - SPRING_DATASOURCE_PRIMARY_URL=jdbc:postgresql://postgres-db-primary:5432/bookstore_db_primary
      - SPRING_DATASOURCE_PRIMARY_USERNAME=postgres
      - SPRING_DATASOURCE_PRIMARY_PASSWORD=postgres
      - SPRING_DATASOURCE_REPLICA_URL=jdbc:postgresql://postgres-db-replica:5432/bookstore_db_replica
      - SPRING_DATASOURCE_REPLICA_USERNAME=postgres
      - SPRING_DATASOURCE_REPLICA_PASSWORD=postgres
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_PROFILES_ACTIVE=prod
    volumes:
      - logs:/var/log/online-bookstore

  postgres-db-primary:
    image: postgres:15
    container_name: postgres-db-primary
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookstore_db_primary
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./init-scripts-primary:/docker-entrypoint-initdb.d
      - ./pg_hba_primary.conf:/tmp/pg_hba.conf
    command:
      - "postgres"
      - "-c"
      - "wal_level=replica"
      - "-c"
      - "max_wal_senders=3"
      - "-c"
      - "wal_keep_size=64"

  postgres-db-replica:
    image: postgres:15
    container_name: postgres-db-replica
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookstore_db_replica
      PG_PRIMARY_HOST: "postgres-db-primary"
      PG_REPLICATION_USER: "replication_user"
      PG_REPLICATION_PASSWORD: "replication_password"
      PGDATA: /var/lib/postgresql/data/pgdatareplica
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
      - ./pg_hba_replica.conf:/tmp/pg_hba.conf
    restart: always
    depends_on:
      - postgres-db-primary


  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/etc/prometheus

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_primary_data:
  postgres_replica_data:
  logs:
  prometheus_data:
  grafana_data:
